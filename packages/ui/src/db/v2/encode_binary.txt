
let s = ""
encodeString()
// each table that we scan needs a way to map its keys to a Uint8Array


class Encoder {
const words : number[] = new Array<number>(1024)
let ix = 0
function encodeString(str: string) : void {
    for (let i = 0; i < str.length; i++) {
        words[ix++ ] = str.charCodeAt(i)
    }
    words[ix++] = 0
}

function encodeNumber(n: number) : void {
    const low = n & 0xFFFFFFFF;
    const high = (n - low) / 0x100000000;
    words[ix++] = (high >> 16) & 0xFFFF;
    words[ix++] = high & 0xFFFF;
    words[ix++] = (low >> 16) & 0xFFFF;
    words[ix++] = low & 0xFFFF;
}

// we want to compare as a series of 32 bit words
// the words themselves are probably little endian,
// maybe this should just use a hex string? that might be faster in javascript
function getKey() : Uint32Array {
    words[ix++] = 0
    const r = new Uint32Array((ix+1)>>2)
    for (let i=0; i<r.length; i++) {
        r[i] = words[i*2]<<16 | words[i*2+1]
    }
    return r
}
}